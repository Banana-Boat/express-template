version: "3"

services:
  mysql:
    image: mysql:8.0
    deploy:
      mode: global
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=12345
      - MYSQL_DATABASE=test
    volumes:
      - ./db-data/mysql:/var/lib/mysql

  service:
    image: tiangexiang/express-service:0.1.0
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - mysql
    ports:
      - "8080:8080"
    environment:
      # 重写 DB_HOST 变量，compose创建network，使两个容器之间可以通过容器名作为ip通信
      - DB_HOST=mysql

    # 同时使用CMD和ENTRYPOINT，会将cmd作为entrypoint的默认参数进行执行，
    # 即 ENTRYPOINT [ "/app/wait-for.sh", "mysql:3306", "--", "/app/main" ]
    # 容器具有指定可执行文件，同时需要能方便地修改默认参数，可选择此中方式

    # 通过wait-for.sh脚本，使server在mysql成功运行后再开始运行，设置超时上限为50s
    entrypoint: ["/app/wait-for.sh", "mysql:3306", "-t", "60", "--"]
    command: ["npm", "run", "start-prod"]
